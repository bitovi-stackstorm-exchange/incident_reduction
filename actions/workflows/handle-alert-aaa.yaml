version: 1.0

description: Receiver for alerts of type aaa

input:
  - alert_data

tasks:

  get_approval:
    action: core.ask
    input:
      schema:
        type: object
        properties:
          approved:
            type: boolean
            description: "Continue?"
            required: True
          message:
            type: string
            description: "Reason for approval"
            required: True
    next:
      - when: <% task(get_approval).result.response.approved %>
        do: handle_aaa
      - when: <% not task(get_approval).result.response.approved %>
        do: fail
      - when: <% failed() %>
        do: fail

  handle_aaa:
    # TODO:
    #   - create xxxx_remediation pack if not exists
    #   - move  xxxx_remediation.remediate_aaa action to xxxx_remediation pack
    # action: core.echo message="call incident_reduction.remediate_aaa pack" 
    action: incident_reduction.remediate-aaa
    input:
      dc: <% ctx().alert_data.dc %> # OCC/OCE
      app_id: <% ctx().alert_data.app_id %> # app_id value 
      app_env: <% ctx().alert_data.app_env %> # app environment
    next:
      - when: <% succeeded() and task(handle_aaa).result.output.status = "UP"  %>
        do: notify_up
      - when: <% succeeded() and task(handle_aaa).result.output.status = "DOWN"  %>
        do: notify_down
      - when: <% failed() %>
        do: notify_failed


  notify_up:
    action: core.echo message="UP!  Reason=<% task(get_approval).result.response.message %>"

  notify_down:
    action: core.echo message="DOWN!  Reason=<% task(get_approval).result.response.message %>"

  notify_failed:
    action: core.echo message="Alert Remediatediation failed!"