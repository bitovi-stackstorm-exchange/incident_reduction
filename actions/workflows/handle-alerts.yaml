version: 1.0

description: Receiver for alerts

input:
  - trigger_data

vars:
  - implemented_types:
      - "4xx"
      - "5xx"
      - "3xx"
      - "AAA"
      - "low_disk_space"

tasks:
    # TODO: 
    #   - Create a new pack:  xxxx_alerts
    #   - Create a new worklow: handle-alerts
    #   - Move this router logic to xxx_alerts.handle-alerts 
  route:
  action: core.noop
    next:
      - when: <% ctx().trigger_data.type = "4xx" %>
        do: handle_4xx
      - when: <% ctx().trigger_data.type = "5xx" %>
        do: handle_5xx
      - when: <% ctx().trigger_data.type = "3xx" %>
        do: handle_3xx
      - when: <% ctx().trigger_data.type = "AAA" %>
        do: handle_aaa
      - when: <% ctx().trigger_data.type = "low_disk_space" %>
        do: handle_low_disk_space

        # handle not found
      - when: <% succeeded() and not ctx().implemented_types.contains(ctx().trigger_data.type) %>
        do: notify_not_found

  handle_4xx:
    action: incident_reduction.handle-alert-4xx
    input:
      alert_data: <% ctx().trigger_data %>

  handle_aaa:
    action: incident_reduction.handle-alert-aaa
    input:
      alert_data: <% ctx().trigger_data %>


  handle_low_disk_space:
    action: incident_reduction.handle-alert-low-disk-space
    input:
      alert_data: <% ctx().trigger_data %>

  handle_5xx:
    # TODO:
    #   - create incident_reduction.handle_5xx action to handle 5xx alert types
    action: core.echo message="call incident_reduction.handle_5xx pack" 
    input:
      alert_data: <% ctx().trigger_data %>

  handle_3xx:
    # TODO:
    #   - create incident_reduction.handle_3xx action to handle 3xx alert types
    action: core.echo message="call incident_reduction.handle_3xx pack" 
    input:
      alert_data: <% ctx().trigger_data %>



  notify_not_found:
    action: core.echo message="Trigger type not found"